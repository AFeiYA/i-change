/* Card and layout styles */
.card {
  background: var(--card-bg);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  padding: var(--spacing-lg);
  margin-bottom: var(--spacing-md);
  box-shadow: 0 2px 8px var(--shadow);
  transition: all var(--transition-normal);
}

.card:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 16px var(--shadow-hover);
}

.card-header {
  border-bottom: 1px solid var(--border-color);
  padding-bottom: var(--spacing-md);
  margin-bottom: var(--spacing-lg);
}

.card-title {
  margin: 0;
  color: var(--text-secondary);
  font-size: var(--font-size-xl);
  font-weight: 600;
}

.card-subtitle {
  margin: var(--spacing-xs) 0 0 0;
  color: var(--text-muted);
  font-size: var(--font-size-sm);
}

.card-body {
  line-height: 1.6;
}

.card-footer {
  border-top: 1px solid var(--border-color);
  padding-top: var(--spacing-md);
  margin-top: var(--spacing-lg);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

/* Special card types */
.result-card {
  background: var(--card-gradient);
  border: 2px solid var(--accent-blue);
  text-align: center;
  animation: fadeInUp var(--transition-slow) ease-out;
}

.result-card .hexagram-symbol {
  font-size: 4rem;
  margin: var(--spacing-md) 0;
  color: var(--text-secondary);
}

.interpretation-card {
  margin-top: var(--spacing-lg);
  border-left: 4px solid var(--accent-green);
}

.changing-lines-card {
  border-left: 4px solid var(--accent-orange);
  background: var(--warning-bg);
}

/* Grid layouts */
.grid-2 {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: var(--spacing-lg);
  margin: var(--spacing-lg) 0;
}

.grid-3 {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: var(--spacing-md);
  margin: var(--spacing-lg) 0;
}

.grid-4 {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: var(--spacing-md);
  margin: var(--spacing-lg) 0;
}

/* Form styles */
.form-group {
  margin-bottom: var(--spacing-lg);
}

.form-label {
  display: block;
  margin-bottom: var(--spacing-sm);
  font-weight: 500;
  color: var(--text-secondary);
}

.form-input {
  width: 100%;
  padding: var(--spacing-sm) var(--spacing-md);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  background: var(--bg-primary);
  color: var(--text-primary);
  font-size: var(--font-size-base);
  transition: border-color var(--transition-normal);
}

.form-input:focus {
  outline: none;
  border-color: var(--accent-blue);
  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
}

.form-textarea {
  min-height: 100px;
  resize: vertical;
}

.form-select {
  appearance: none;
  background-image: url("data:image/svg+xml;charset=US-ASCII,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'><path fill='%23666' d='m2 0-2 2h4zm0 5 2-2h-4z'/></svg>");
  background-repeat: no-repeat;
  background-position: right 12px center;
  background-size: 12px;
  padding-right: 40px;
}

/* Data actions */
.data-actions {
  display: flex;
  gap: var(--spacing-md);
  margin: var(--spacing-lg) 0;
  flex-wrap: wrap;
}

.data-actions .btn {
  flex: 1;
  min-width: 150px;
}

/* Method descriptions */
.method-descriptions {
  margin: 20px 0;
  display: flex;
  justify-content: center;
  gap: 20px;
  flex-wrap: wrap;
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
}

.method-desc {
  background: var(--bg-secondary);
  padding: 15px 20px;
  border-radius: var(--border-radius);
  font-size: 0.9em;
  color: var(--text-secondary);
  flex: 1;
  min-width: 200px;
  box-shadow: 0 2px 8px var(--shadow);
  border: 1px solid var(--border-color);
  transition: all var(--transition-normal);
}

.method-desc:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px var(--shadow-hover);
}

/* Loading spinner */
.loading-spinner {
  width: 40px;
  height: 40px;
  border: 4px solid var(--border-color);
  border-top: 4px solid var(--accent-blue);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin: 20px auto;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Divination result */
.divination-result {
  background: var(--bg-secondary);
  border-radius: 15px;
  padding: 20px;
  box-shadow: 0 4px 6px var(--shadow);
  margin-top: 40px;
  border: 1px solid var(--border-color);
}